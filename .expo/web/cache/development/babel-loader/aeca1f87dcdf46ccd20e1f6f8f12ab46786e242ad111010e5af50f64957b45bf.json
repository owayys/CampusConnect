{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"colors\", \"locations\", \"startPoint\", \"endPoint\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { normalizeColor } from \"./normalizeColor\";\nexport default function NativeLinearGradient(_ref) {\n  var colors = _ref.colors,\n    locations = _ref.locations,\n    startPoint = _ref.startPoint,\n    endPoint = _ref.endPoint,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    layout = _React$useState2[0],\n    setLayout = _React$useState2[1];\n  var _ref2 = layout != null ? layout : {},\n    _ref2$width = _ref2.width,\n    width = _ref2$width === void 0 ? 1 : _ref2$width,\n    _ref2$height = _ref2.height,\n    height = _ref2$height === void 0 ? 1 : _ref2$height;\n  var linearGradientBackgroundImage = React.useMemo(function () {\n    return getLinearGradientBackgroundImage(colors, locations, startPoint, endPoint, width, height);\n  }, [colors, locations, startPoint, endPoint, width, height]);\n  return React.createElement(View, _objectSpread(_objectSpread({}, props), {}, {\n    style: [props.style, {\n      backgroundImage: linearGradientBackgroundImage\n    }],\n    onLayout: function onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n        x = _event$nativeEvent$la.x,\n        y = _event$nativeEvent$la.y,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height;\n      var oldLayout = layout != null ? layout : {\n        x: 0,\n        y: 0,\n        width: 1,\n        height: 1\n      };\n      if (x !== oldLayout.x || y !== oldLayout.y || width !== oldLayout.width || height !== oldLayout.height) {\n        setLayout({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n      }\n      if (props.onLayout) {\n        props.onLayout(event);\n      }\n    }\n  }));\n}\nexport function getLinearGradientBackgroundImage(colors, locations, startPoint, endPoint) {\n  var width = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var height = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  var gradientColors = calculateGradientColors(colors, locations);\n  var angle = calculatePseudoAngle(width, height, startPoint, endPoint);\n  return \"linear-gradient(\" + angle + \"deg, \" + gradientColors.join(', ') + \")\";\n}\nfunction calculatePseudoAngle(width, height, startPoint, endPoint) {\n  var getControlPoints = function getControlPoints() {\n    var correctedStartPoint = [0, 0];\n    if (Array.isArray(startPoint)) {\n      correctedStartPoint = [startPoint[0] != null ? startPoint[0] : 0.0, startPoint[1] != null ? startPoint[1] : 0.0];\n    }\n    var correctedEndPoint = [0.0, 1.0];\n    if (Array.isArray(endPoint)) {\n      correctedEndPoint = [endPoint[0] != null ? endPoint[0] : 0.0, endPoint[1] != null ? endPoint[1] : 1.0];\n    }\n    return [correctedStartPoint, correctedEndPoint];\n  };\n  var _getControlPoints = getControlPoints(),\n    _getControlPoints2 = _slicedToArray(_getControlPoints, 2),\n    start = _getControlPoints2[0],\n    end = _getControlPoints2[1];\n  start[0] *= width;\n  end[0] *= width;\n  start[1] *= height;\n  end[1] *= height;\n  var py = end[1] - start[1];\n  var px = end[0] - start[0];\n  return 90 + Math.atan2(py, px) * 180 / Math.PI;\n}\nfunction calculateGradientColors(colors, locations) {\n  return colors.map(function (color, index) {\n    var hexColor = normalizeColor(color);\n    var output = hexColor;\n    if (locations && locations[index]) {\n      var location = Math.max(0, Math.min(1, locations[index]));\n      var percentage = location * 100;\n      output += \" \" + percentage + \"%\";\n    }\n    return output;\n  });\n}","map":{"version":3,"names":["React","View","normalizeColor","NativeLinearGradient","_ref","colors","locations","startPoint","endPoint","props","_objectWithoutProperties","_excluded","_React$useState","useState","_React$useState2","_slicedToArray","layout","setLayout","_ref2","_ref2$width","width","_ref2$height","height","linearGradientBackgroundImage","useMemo","getLinearGradientBackgroundImage","createElement","_objectSpread","style","backgroundImage","onLayout","event","_event$nativeEvent$la","nativeEvent","x","y","oldLayout","arguments","length","undefined","gradientColors","calculateGradientColors","angle","calculatePseudoAngle","join","getControlPoints","correctedStartPoint","Array","isArray","correctedEndPoint","_getControlPoints","_getControlPoints2","start","end","py","px","Math","atan2","PI","map","color","index","hexColor","output","location","max","min","percentage"],"sources":["/Users/asher/Documents/GitHub/CampusConnect/node_modules/expo-linear-gradient/src/NativeLinearGradient.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { LayoutRectangle, View } from 'react-native';\n\nimport { NativeLinearGradientPoint, NativeLinearGradientProps } from './NativeLinearGradient.types';\nimport { normalizeColor } from './normalizeColor';\n\nexport default function NativeLinearGradient({\n  colors,\n  locations,\n  startPoint,\n  endPoint,\n  ...props\n}: NativeLinearGradientProps): React.ReactElement {\n  const [layout, setLayout] = React.useState<LayoutRectangle | null>(null);\n\n  const { width = 1, height = 1 } = layout ?? {};\n\n  // TODO(Bacon): In the future we could consider adding `backgroundRepeat: \"no-repeat\"`. For more\n  // browser support.\n  const linearGradientBackgroundImage = React.useMemo(() => {\n    return getLinearGradientBackgroundImage(colors, locations, startPoint, endPoint, width, height);\n  }, [colors, locations, startPoint, endPoint, width, height]);\n\n  return (\n    <View\n      {...props}\n      style={[\n        props.style,\n        // @ts-ignore: [ts] Property 'backgroundImage' does not exist on type 'ViewStyle'.\n        { backgroundImage: linearGradientBackgroundImage },\n      ]}\n      onLayout={(event) => {\n        const { x, y, width, height } = event.nativeEvent.layout;\n        const oldLayout = layout ?? { x: 0, y: 0, width: 1, height: 1 };\n        // don't set new layout state unless the layout has actually changed\n        if (\n          x !== oldLayout.x ||\n          y !== oldLayout.y ||\n          width !== oldLayout.width ||\n          height !== oldLayout.height\n        ) {\n          setLayout({ x, y, width, height });\n        }\n\n        if (props.onLayout) {\n          props.onLayout(event);\n        }\n      }}\n    />\n  );\n}\n\n/**\n * Extracted to a separate function in order to be able to test logic independently.\n */\nexport function getLinearGradientBackgroundImage(\n  colors: number[] | string[],\n  locations?: number[] | null,\n  startPoint?: NativeLinearGradientPoint | null,\n  endPoint?: NativeLinearGradientPoint | null,\n  width: number = 1,\n  height: number = 1\n) {\n  const gradientColors = calculateGradientColors(colors, locations);\n  const angle = calculatePseudoAngle(width, height, startPoint, endPoint);\n  return `linear-gradient(${angle}deg, ${gradientColors.join(', ')})`;\n}\n\nfunction calculatePseudoAngle(\n  width: number,\n  height: number,\n  startPoint?: NativeLinearGradientPoint | null,\n  endPoint?: NativeLinearGradientPoint | null\n) {\n  const getControlPoints = (): NativeLinearGradientPoint[] => {\n    let correctedStartPoint: NativeLinearGradientPoint = [0, 0];\n    if (Array.isArray(startPoint)) {\n      correctedStartPoint = [\n        startPoint[0] != null ? startPoint[0] : 0.0,\n        startPoint[1] != null ? startPoint[1] : 0.0,\n      ];\n    }\n    let correctedEndPoint: NativeLinearGradientPoint = [0.0, 1.0];\n    if (Array.isArray(endPoint)) {\n      correctedEndPoint = [\n        endPoint[0] != null ? endPoint[0] : 0.0,\n        endPoint[1] != null ? endPoint[1] : 1.0,\n      ];\n    }\n    return [correctedStartPoint, correctedEndPoint];\n  };\n\n  const [start, end] = getControlPoints();\n  start[0] *= width;\n  end[0] *= width;\n  start[1] *= height;\n  end[1] *= height;\n  const py = end[1] - start[1];\n  const px = end[0] - start[0];\n\n  return 90 + (Math.atan2(py, px) * 180) / Math.PI;\n}\n\nfunction calculateGradientColors(colors: number[] | string[], locations?: number[] | null) {\n  return colors.map((color: number | string, index: number): string | void => {\n    const hexColor = normalizeColor(color);\n    let output = hexColor;\n    if (locations && locations[index]) {\n      const location = Math.max(0, Math.min(1, locations[index]));\n      // Convert 0...1 to 0...100\n      const percentage = location * 100;\n      output += ` ${percentage}%`;\n    }\n    return output;\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}